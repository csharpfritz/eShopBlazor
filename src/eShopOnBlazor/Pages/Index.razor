@page "/"
@inject ICatalogService CatalogService
@using BlazorWebFormsComponents

<div class="esh-table">
    <p class="esh-link-wrapper">
        <a href="Catalog/Create" class="btn esh-button esh-button-primary">
            Create New
        </a>
    </p>

    <ListView @ref="productList" ItemPlaceholderID="itemPlaceHolder" 
              runat="server" ItemType="CatalogItem" Context="Item">
			<LayoutTemplate Context="itemPlaceholder">
				<table>
					<tr class="esh-table-header">
						<th></th>
						<th>Name</th>
						<th>Description</th>
						<th>Brand</th>
						<th>Type</th>
						<th>Price</th>
						<th>Picture name</th>
						<th>Stock</th>
						<th>Restock</th>
						<th>Max stock</th>
					</tr>
					<tbody>
						@itemPlaceholder
          </tbody>
				</table>
			</LayoutTemplate>
        <EmptyDataTemplate>
            <tr>
                <td>No data was returned.</td>
            </tr>
        </EmptyDataTemplate>
        <ItemTemplate>
            <tr>
                <td>
                    <img class="esh-thumbnail" src="@($"/Pics/{Item.PictureFileName}")">
                </td>
                <td>
                    <p>@Item.Name</p>
                </td>
                <td>
                    <p>@Item.Description</p>
                </td>
                <td>
                    <p>@Item.CatalogBrand.Brand</p>
                </td>
                <td>
                    <p>@Item.CatalogType.Type</p>
                </td>
                <td>
                    <span class="esh-price">@Item.Price</span>
                </td>
                <td>
                    <p>@Item.PictureFileName</p>
                </td>
                <td>
                    <p>@Item.AvailableStock</p>
                </td>
                <td>
                    <p>@Item.RestockThreshold</p>
                </td>
                <td>
                    <p>@Item.MaxStockThreshold</p>
                </td>
                <td>
                    <a href="@($"/Catalog/Edit/{Item.Id}")" class="esh-table-link">
                        Edit
                    </a>
                    |
                    <a href="@($"/Catalog/Details/{Item.Id}")" class="esh-table-link">
                        Details
                    </a>
                    |
                    <a href="@($"/Catalog/Delete/{Item.Id}")" class="esh-table-link">
                        Delete
                    </a>
                </td>
            </tr>
        </ItemTemplate>
    </ListView>
</div>

<div class="esh-pager">
    <div class="container">
        <article class="esh-pager-wrapper row">
            <nav>
                @if (pageIndex > 0)
                {
                    <a @onclick="Previous" class="esh-pager-item esh-pager-item--navigable">
                        Previous
                    </a>
                }

                <span class="esh-pager-item">
                    Showing @Model.ItemsPerPage of @Model.TotalItems products - Page @(Model.ActualPage + 1) - @Model.TotalPages
                </span>

                @if (pageIndex < Model.TotalPages - 1)
                {
                    <a @onclick="Next" class="esh-pager-item esh-pager-item--navigable">
                        Next
                    </a>
                }
            </nav>
        </article>
    </div>
</div>

@code {

	protected ListView<CatalogItem> productList;

	int pageSize = 10;
	int pageIndex = 0;
	PaginatedItemsViewModel<CatalogItem> Model;

	protected override void OnParametersSet() => LoadPage();

	void Previous()
	{
		pageIndex--;
		LoadPage();
	}

	void Next()
	{
		pageIndex++;
		LoadPage();
	}

	void LoadPage()
	{
		Model = CatalogService.GetCatalogItemsPaginated(pageSize, pageIndex);
	}

	protected override void OnAfterRender(bool firstRender)
	{

		productList.DataSource = Model.Data;
		productList.DataBind();

	}

}
