@page "/"
@inject ICatalogService CatalogService

<div class="esh-table">
    <p class="esh-link-wrapper">
        <a href="Catalog/Create" class="btn esh-button esh-button-primary">
            Create New
        </a>
    </p>

    @if (Model == null || !Model.Data.Any())
    {
        <table>
            <tr>
                <td>No data was returned.</td>
            </tr>
        </table>
    }
    else
    {
        <table class="table">
            <thead>
                <tr class="esh-table-header">
                    <th></th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Brand</th>
                    <th>Type</th>
                    <th>Price</th>
                    <th>Picture name</th>
                    <th>Stock</th>
                    <th>Restock</th>
                    <th>Max stock</th>
                </tr>
            </thead>
            <tbody>

                @* 
                    
                    TODO: Output catalog data here 
                    
                 *@

            </tbody>
        </table>
    }
</div>

<div class="esh-pager">
    <div class="container">
        <article class="esh-pager-wrapper row">
            <nav>
                @if (pageIndex > 0)
                {
                    <a @onclick="Previous" class="esh-pager-item esh-pager-item--navigable">
                        Previous
                    </a>
                }

                <span class="esh-pager-item">
                    Showing @Model.ItemsPerPage of @Model.TotalItems products - Page @(Model.ActualPage + 1) - @Model.TotalPages
                </span>

                @if (pageIndex < Model.TotalPages - 1)
                {
                    <a @onclick="Next" class="esh-pager-item esh-pager-item--navigable">
                        Next
                    </a>
                }
            </nav>
        </article>
    </div>
</div>

@code {
  int pageSize = 10;
  int pageIndex = 0;
  PaginatedItemsViewModel<CatalogItem> Model;

  protected override void OnParametersSet() => LoadPage();

  void Previous()
  {
      pageIndex--;
      LoadPage();
  }

  void Next()
  {
      pageIndex++;
      LoadPage();
  }

  void LoadPage()
  {
      Model = CatalogService.GetCatalogItemsPaginated(pageSize, pageIndex);
  }
}
